{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'table-of-contents',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  {% set numItems = paragraph.field_table_of_content_panels|length %}

  {# 
    Logic: if we have 1, 2, 3, 4, or 5 items, that will be the number of columns.
    if we have 6 or 7 items, use 3 columns
    if we have 8 items, use 4 columns
    if we have 9 or 10 items, user 5 columns
    the default is 6 columns (so 11 or 12 items will use 6 columns)
   #}
  
  {% set numColumns = 6 %}
  {% if numItems < 6 %}
      {% set numColumns = numItems %}
  {% elseif numItems < 8 %}
      {% set numColumns = 3 %}
  {% elseif numItems == 8 %}
      {% set numColumns = 4 %}
  {% elseif numItems > 8 and numItems <= 10 %}
      {% set numColumns = 5 %}
  {% endif %}

  <div{{ attributes.addClass(classes) }}>
    {% block content %}
        <nav class="table-of-contents--menu" aria-label="Table of Contents in-page menu">
                {{ content.field_title }}
                
                <ol class="container" data-columns={{ numColumns}}>
                  {% for item in paragraph.field_table_of_content_panels %}
                      <li><a href="#tocpanel-{{ item.entity.id() }}"><div>{{ item.entity.field_title.value }} <span class="subhead">{{ item.entity.field_subhead.value }}</span></div></a></li>
                  {% endfor %}
                </ol>
        </nav>

        {{ content.field_intro_module }}

        {% for item in paragraph.field_table_of_content_panels %}
                <div class="table-of-contents--panel" id={{ "tocpanel-" ~ item.entity.id() }}>
                  {% if loop.index == 1 %}
                    <div class="table-of-contents--panel-header initial">{{ loop.index }}. {{ item.entity.field_title.value }}</div>
                  {% else %}
                    <div class="table-of-contents--panel-header">{{ loop.index }}. {{ item.entity.field_title.value }}</div>
                  {% endif %}
                  <div class="table-of-contents--panel-wrapper">
                    <div class="container">
                      {{ drupal_entity('paragraph', item.entity.id()) }}
                    </div>
                  </div>
                </div>
          {% endfor %}
    {% endblock %}
  </div>
{% endblock paragraph %}
